// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListingDetails should render 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    collapsable={false}
    contentContainerStyle={
      Object {
        "alignItems": "center",
        "display": "flex",
        "margin": 0,
      }
    }
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View>
      <Text
        style={
          Object {
            "fontFamily": "quicksand-bold",
            "fontSize": 25,
            "marginBottom": 5,
            "textAlign": "center",
          }
        }
      >
        
      </Text>
      <Image
        source={1}
        style={
          Object {
            "alignSelf": "center",
            "height": 350,
            "margin": 5,
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <Text
        style={
          Object {
            "fontFamily": "quicksand",
            "fontSize": 15,
            "margin": 5,
          }
        }
      >
        
      </Text>
      <Text
        style={
          Object {
            "fontFamily": "quicksand",
            "fontSize": 15,
            "margin": 5,
          }
        }
      >
        This item supports 
        
      </Text>
      <Text
        style={
          Object {
            "fontFamily": "quicksand",
            "fontSize": 15,
            "margin": 5,
          }
        }
      >
        Minimum Donation: $
      </Text>
      <Text
        style={
          Object {
            "fontFamily": "quicksand",
            "fontSize": 15,
            "margin": 5,
          }
        }
      >
        Charity Score:
      </Text>
      <Image
        source={
          Object {
            "uri": "",
          }
        }
        style={
          Object {
            "alignSelf": "center",
            "height": 40,
            "marginLeft": 15,
            "resizeMode": "contain",
            "width": 80,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "red",
            "fontFamily": "quicksand-bold",
          }
        }
      >
        Time Remaining: 
        Invalid dateh tem tes
      </Text>
      <View
        style={
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "quicksand",
              "fontSize": 15,
              "marginTop": 15,
            }
          }
        >
          Read more about their mission
           
        </Text>
        <Text
          onPress={[Function]}
          style={
            Object {
              "fontFamily": "quicksand-bold",
              "marginTop": 15,
              "textDecorationLine": "underline",
            }
          }
        >
          here
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "flexWrap": "wrap",
            }
          }
        />
      </View>
      <View
        accessible={true}
        focusable={false}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRadius": undefined,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": undefined,
            "flexDirection": "row",
            "marginLeft": 2,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "left": 0,
              "opacity": 1,
              "paddingBottom": undefined,
              "paddingTop": undefined,
              "position": "absolute",
              "right": 0,
              "top": 18,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#575757",
                  "fontSize": 17,
                  "paddingRight": 5,
                  "paddingTop": 5,
                },
                Object {
                  "fontFamily": "quicksand",
                  "fontSize": 15,
                  "paddingLeft": 10,
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "fontSize": 17,
                  },
                  Object {
                    "fontFamily": "quicksand",
                    "fontSize": 15,
                    "paddingLeft": 10,
                  },
                ]
              }
            >
              Enter a bid greater than $
            </Text>
          </Text>
        </View>
        <TextInput
          allowFontScaling={true}
          editable={true}
          onBlur={[Function]}
          onChange={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder={null}
          placeholderTextColor="#575757"
          rejectResponderTermination={true}
          style={
            Object {
              "color": "#000",
              "flex": 1,
              "fontSize": 17,
              "height": 50,
              "paddingBottom": 7,
              "paddingLeft": 5,
              "paddingRight": 5,
              "paddingTop": 3,
              "top": 8,
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          value={null}
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "#2cb833",
            "borderBottomWidth": null,
            "borderColor": "#007aff",
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "borderWidth": undefined,
            "elevation": 2,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "center",
            "margin": 5,
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontFamily": "quicksand-bold",
              "fontSize": 20,
            }
          }
        >
          Place Bid
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": 120,
            "marginBottom": 15,
            "marginTop": 5,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#336799",
              "fontFamily": "quicksand",
              "margin": 5,
              "textAlign": "center",
              "width": 140,
            }
          }
        >
          Charity information provided by
        </Text>
        <Image
          source={1}
          style={
            Object {
              "height": 45,
              "width": 90,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "backgroundColor": "#2cb833",
        "borderTopColor": "#dddddd",
        "borderTopWidth": 1,
        "bottom": "0%",
        "display": "flex",
        "flexDirection": "row",
        "height": "8%",
        "justifyContent": "space-around",
        "padding": 8,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
      >
        <Image
          accessibilityRole="button"
          id="search"
          source={1}
          style={
            Object {
              "height": 30,
              "width": 30,
            }
          }
        />
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
      >
        <Image
          accessibilityRole="button"
          id="add"
          source={1}
          style={
            Object {
              "height": 30,
              "width": 30,
            }
          }
        />
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
      >
        <Image
          accessibilityRole="button"
          id="profile"
          source={1}
          style={
            Object {
              "height": 30,
              "width": 30,
            }
          }
        />
      </View>
    </RNGestureHandlerButton>
  </View>
</RNCSafeAreaView>
`;
