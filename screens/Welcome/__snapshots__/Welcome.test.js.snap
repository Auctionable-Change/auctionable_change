// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Welcome should render 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Image
    source={1}
    style={
      Object {
        "height": 200,
        "resizeMode": "contain",
        "width": "95%",
      }
    }
  />
  <Text
    style={
      Array [
        Object {
          "color": "#000",
          "fontFamily": "System",
          "fontSize": 16,
        },
        Object {
          "alignSelf": "center",
          "color": "grey",
          "fontFamily": "quicksand",
          "marginBottom": 10,
          "textAlign": "center",
          "width": "70%",
        },
      ]
    }
  >
    Buy and sell with purpose because together we can make A.change
  </Text>
  <View
    style={
      Object {
        "flex": 1,
        "padding": 10,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "stretch",
          "backgroundColor": "#62B1F6",
          "borderBottomWidth": null,
          "borderColor": "#007aff",
          "borderLeftWidth": null,
          "borderRadius": 5,
          "borderRightWidth": null,
          "borderTopWidth": null,
          "borderWidth": undefined,
          "elevation": 2,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "opacity": 1,
          "paddingBottom": 6,
          "paddingTop": 6,
          "shadowColor": undefined,
          "shadowOffset": undefined,
          "shadowOpacity": undefined,
          "shadowRadius": undefined,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#fff",
              "fontFamily": "System",
              "fontSize": 16.5,
              "marginLeft": 0,
              "marginRight": 0,
              "paddingLeft": 16,
              "paddingRight": 16,
            },
            Object {
              "fontFamily": "quicksand-bold",
            },
          ]
        }
      >
        Current Listings
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "stretch",
          "backgroundColor": "#62B1F6",
          "borderBottomWidth": null,
          "borderColor": "#007aff",
          "borderLeftWidth": null,
          "borderRadius": 5,
          "borderRightWidth": null,
          "borderTopWidth": null,
          "borderWidth": undefined,
          "elevation": 2,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "marginTop": 30,
          "opacity": 1,
          "paddingBottom": 6,
          "paddingTop": 6,
          "shadowColor": undefined,
          "shadowOffset": undefined,
          "shadowOpacity": undefined,
          "shadowRadius": undefined,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#fff",
              "fontFamily": "System",
              "fontSize": 16.5,
              "marginLeft": 0,
              "marginRight": 0,
              "paddingLeft": 16,
              "paddingRight": 16,
            },
            Object {
              "fontFamily": "quicksand-bold",
            },
          ]
        }
      >
        Post Item
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "white",
        "borderTopColor": "#dddddd",
        "borderTopWidth": 1,
        "bottom": "0%",
        "display": "flex",
        "flexDirection": "row",
        "height": "8%",
        "justifyContent": "space-around",
        "padding": 8,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
      >
        <Image
          accessibilityRole="button"
          id="search"
          source={1}
          style={
            Object {
              "height": 30,
              "width": 30,
            }
          }
        />
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
      >
        <Image
          accessibilityRole="button"
          id="add"
          source={1}
          style={
            Object {
              "height": 30,
              "width": 30,
            }
          }
        />
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
      >
        <Image
          accessibilityRole="button"
          id="home"
          source={1}
          style={
            Object {
              "height": 30,
              "width": 30,
            }
          }
        />
      </View>
    </RNGestureHandlerButton>
  </View>
</View>
`;
