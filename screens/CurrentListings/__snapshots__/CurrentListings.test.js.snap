// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CurrentListings should render 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#FFFFFF",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <View>
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "transparent",
          "borderBottomWidth": null,
          "borderColor": "#007aff",
          "borderLeftWidth": null,
          "borderRadius": 5,
          "borderRightWidth": null,
          "borderTopWidth": null,
          "borderWidth": undefined,
          "elevation": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "space-between",
          "opacity": 1,
          "paddingBottom": 6,
          "paddingTop": 6,
          "shadowColor": null,
          "shadowOffset": null,
          "shadowOpacity": null,
          "shadowRadius": null,
          "width": 300,
        }
      }
    >
      <Text
        ellipsizeMode="tail"
        note={true}
        numberOfLines={1}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#a7a7a7",
              "fontFamily": "System",
              "fontSize": 16,
              "lineHeight": null,
              "marginLeft": 0,
              "marginRight": 0,
              "paddingLeft": 16,
              "paddingRight": 16,
            },
            undefined,
            undefined,
          ]
        }
      >
        Filter by Category
      </Text>
      <Text />
    </View>
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      transparent={false}
      visible={false}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fff",
            "flex": 1,
            "height": 1334,
          }
        }
      >
        <View>
          <RCTSafeAreaView
            emulateUnlessSupported={true}
            style={
              Object {
                "backgroundColor": "#F8F8F8",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#F8F8F8",
                  "borderBottomColor": "#a7a6ab",
                  "borderBottomWidth": 0.5,
                  "elevation": 3,
                  "flexDirection": "row",
                  "height": 64,
                  "justifyContent": "center",
                  "left": 0,
                  "paddingLeft": 6,
                  "paddingRight": 10,
                  "right": 0,
                  "shadowColor": undefined,
                  "shadowOffset": undefined,
                  "shadowOpacity": undefined,
                  "shadowRadius": undefined,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "center",
                    "flex": 1,
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  forwardedRef={[Function]}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": null,
                      "backgroundColor": "transparent",
                      "borderBottomWidth": null,
                      "borderColor": null,
                      "borderLeftWidth": null,
                      "borderRadius": 5,
                      "borderRightWidth": null,
                      "borderTopWidth": null,
                      "borderWidth": undefined,
                      "elevation": 0,
                      "flexDirection": "row",
                      "height": 45,
                      "justifyContent": "space-between",
                      "marginLeft": 3,
                      "opacity": 1,
                      "paddingBottom": 6,
                      "paddingLeft": 4,
                      "paddingRight": 6,
                      "paddingTop": 6,
                      "shadowColor": null,
                      "shadowOffset": null,
                      "shadowOpacity": null,
                      "shadowRadius": null,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#007aff",
                        "fontFamily": "System",
                        "fontSize": 17,
                        "marginLeft": 0,
                        "marginRight": 0,
                        "paddingLeft": 2,
                        "paddingRight": undefined,
                        "top": 1,
                      }
                    }
                  >
                    Back
                  </Text>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "flex": 1,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#000",
                      "fontFamily": "System",
                      "fontSize": 17,
                      "fontWeight": "700",
                      "marginLeft": undefined,
                      "paddingLeft": 4,
                      "paddingTop": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  Select One
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-end",
                    "alignSelf": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                  }
                }
              />
            </View>
          </RCTSafeAreaView>
        </View>
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            }
          }
        >
          <RCTScrollView
            automaticallyAdjustContentInsets={false}
            contentContainerStyle={
              Array [
                Object {
                  "padding": undefined,
                },
                undefined,
              ]
            }
            contentInset={
              Object {
                "bottom": 0,
              }
            }
            enableAutomaticScroll={true}
            enableOnAndroid={false}
            enableResetScrollToCoords={true}
            extraHeight={75}
            extraScrollHeight={0}
            getScrollResponder={[Function]}
            handleOnScroll={[Function]}
            keyboardDismissMode="interactive"
            keyboardOpeningTime={250}
            keyboardShouldPersistTaps="handled"
            keyboardSpace={0}
            onScroll={[Function]}
            resetKeyboardSpace={[Function]}
            resetScrollToCoords={
              Object {
                "x": 0,
                "y": 0,
              }
            }
            scrollEventThrottle={1}
            scrollForExtraHeightOnAndroid={[Function]}
            scrollIntoView={[Function]}
            scrollToEnd={[Function]}
            scrollToFocusedInput={[Function]}
            scrollToPosition={[Function]}
            showsVerticalScrollIndicator={true}
            style={
              Object {
                "backgroundColor": "transparent",
                "flex": 1,
              }
            }
            update={[Function]}
            viewIsInsideTabBar={false}
          >
            <View>
              <RCTScrollView
                data={
                  Array [
                    <Item
                      label="All"
                      value="all"
                    />,
                    <Item
                      label="Electronics"
                      value="electronics"
                    />,
                    <Item
                      label="Home"
                      value="home"
                    />,
                    <Item
                      label="Furniture"
                      value="furniture"
                    />,
                    <Item
                      label="Baby/Kids"
                      value="baby"
                    />,
                    <Item
                      label="Other"
                      value="other"
                    />,
                  ]
                }
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        button={true}
                        onPress={[Function]}
                        selected={false}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "borderBottomWidth": 0.5,
                            "borderColor": "#c9c9c9",
                            "flexDirection": "row",
                            "marginLeft": 16,
                            "paddingBottom": 13,
                            "paddingRight": 16,
                            "paddingTop": 13,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "alignSelf": "center",
                              "flex": 1,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#000",
                                "fontFamily": "System",
                                "fontSize": 16,
                              }
                            }
                          >
                            All
                          </Text>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-end",
                              "alignSelf": "center",
                              "flex": 0.28,
                              "paddingBottom": null,
                              "paddingLeft": null,
                              "paddingRight": null,
                              "paddingTop": null,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={false}
                            forwardedRef={[Function]}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignSelf": null,
                                "opacity": 1,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        button={true}
                        onPress={[Function]}
                        selected={false}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "borderBottomWidth": 0.5,
                            "borderColor": "#c9c9c9",
                            "flexDirection": "row",
                            "marginLeft": 16,
                            "paddingBottom": 13,
                            "paddingRight": 16,
                            "paddingTop": 13,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "alignSelf": "center",
                              "flex": 1,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#000",
                                "fontFamily": "System",
                                "fontSize": 16,
                              }
                            }
                          >
                            Electronics
                          </Text>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-end",
                              "alignSelf": "center",
                              "flex": 0.28,
                              "paddingBottom": null,
                              "paddingLeft": null,
                              "paddingRight": null,
                              "paddingTop": null,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={false}
                            forwardedRef={[Function]}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignSelf": null,
                                "opacity": 1,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        button={true}
                        onPress={[Function]}
                        selected={false}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "borderBottomWidth": 0.5,
                            "borderColor": "#c9c9c9",
                            "flexDirection": "row",
                            "marginLeft": 16,
                            "paddingBottom": 13,
                            "paddingRight": 16,
                            "paddingTop": 13,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "alignSelf": "center",
                              "flex": 1,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#000",
                                "fontFamily": "System",
                                "fontSize": 16,
                              }
                            }
                          >
                            Home
                          </Text>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-end",
                              "alignSelf": "center",
                              "flex": 0.28,
                              "paddingBottom": null,
                              "paddingLeft": null,
                              "paddingRight": null,
                              "paddingTop": null,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={false}
                            forwardedRef={[Function]}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignSelf": null,
                                "opacity": 1,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        button={true}
                        onPress={[Function]}
                        selected={false}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "borderBottomWidth": 0.5,
                            "borderColor": "#c9c9c9",
                            "flexDirection": "row",
                            "marginLeft": 16,
                            "paddingBottom": 13,
                            "paddingRight": 16,
                            "paddingTop": 13,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "alignSelf": "center",
                              "flex": 1,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#000",
                                "fontFamily": "System",
                                "fontSize": 16,
                              }
                            }
                          >
                            Furniture
                          </Text>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-end",
                              "alignSelf": "center",
                              "flex": 0.28,
                              "paddingBottom": null,
                              "paddingLeft": null,
                              "paddingRight": null,
                              "paddingTop": null,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={false}
                            forwardedRef={[Function]}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignSelf": null,
                                "opacity": 1,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        button={true}
                        onPress={[Function]}
                        selected={false}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "borderBottomWidth": 0.5,
                            "borderColor": "#c9c9c9",
                            "flexDirection": "row",
                            "marginLeft": 16,
                            "paddingBottom": 13,
                            "paddingRight": 16,
                            "paddingTop": 13,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "alignSelf": "center",
                              "flex": 1,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#000",
                                "fontFamily": "System",
                                "fontSize": 16,
                              }
                            }
                          >
                            Baby/Kids
                          </Text>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-end",
                              "alignSelf": "center",
                              "flex": 0.28,
                              "paddingBottom": null,
                              "paddingLeft": null,
                              "paddingRight": null,
                              "paddingTop": null,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={false}
                            forwardedRef={[Function]}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignSelf": null,
                                "opacity": 1,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        button={true}
                        onPress={[Function]}
                        selected={false}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "borderBottomWidth": 0.5,
                            "borderColor": "#c9c9c9",
                            "flexDirection": "row",
                            "marginLeft": 16,
                            "paddingBottom": 13,
                            "paddingRight": 16,
                            "paddingTop": 13,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "alignSelf": "center",
                              "flex": 1,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#000",
                                "fontFamily": "System",
                                "fontSize": 16,
                              }
                            }
                          >
                            Other
                          </Text>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-end",
                              "alignSelf": "center",
                              "flex": 0.28,
                              "paddingBottom": null,
                              "paddingLeft": null,
                              "paddingRight": null,
                              "paddingTop": null,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={false}
                            forwardedRef={[Function]}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignSelf": null,
                                "opacity": 1,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </RCTScrollView>
        </RCTSafeAreaView>
      </View>
    </Modal>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#2CB833"
      hidesWhenStopped={true}
      size="large"
    />
  </View>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
  <View
    style={
      Object {
        "backgroundColor": "white",
        "borderTopColor": "#dddddd",
        "borderTopWidth": 1,
        "bottom": "0%",
        "display": "flex",
        "flexDirection": "row",
        "height": "8%",
        "justifyContent": "space-around",
        "padding": 8,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
      >
        <Image
          accessibilityRole="button"
          id="search"
          source={1}
          style={
            Object {
              "height": 30,
              "width": 30,
            }
          }
        />
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
      >
        <Image
          accessibilityRole="button"
          id="add"
          source={1}
          style={
            Object {
              "height": 30,
              "width": 30,
            }
          }
        />
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
      >
        <Image
          accessibilityRole="button"
          id="home"
          source={1}
          style={
            Object {
              "height": 30,
              "width": 30,
            }
          }
        />
      </View>
    </RNGestureHandlerButton>
  </View>
</RNCSafeAreaView>
`;
